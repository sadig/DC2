#!/usr/bin/python
# -*- coding: utf-8 -*-
#################################################################################
#
#    (DC)Â² - DataCenter Deployment Control
#    Copyright (C) 2010, 2011, 2012, 2013  Stephan Adig <sh@sourcecode.de>
#    This program is free software; you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation; either version 2 of the License, or
#    (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License along
#    with this program; if not, write to the Free Software Foundation, Inc.,
#    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
#################################################################################

import sys
import os
import os.path
from argparse import ArgumentParser
try:
    from dc2.distrotools.config.yamlparser import *
    from dc2.distrotools.actions.mirror import *
except ImportError,e:
    print e
    sys.exit(1)

if __name__=="__main__":
    arguments=ArgumentParser(description="Mirror Archives")
    arguments.add_argument("-c",'--configfile',metavar="FILE",help="Configfilename",dest="cfg_file",default=None)
    arguments.add_argument("-d","--distribution-type",metavar="[debian,ubuntu,all]", help="Distribution Type",dest="dist_type",default="all")
    arguments.add_argument("-m",'--mirror',help="Start the mirror process",action="store_true",dest="mirroring",default=False)
    args=arguments.parse_args()
    if args.cfg_file is not None and args.cfg_file != "":
        config_space=read_yaml_file(args.cfg_file,"mirror")
        if config_space is not None:
            if args.mirroring is not False:
                do_mirror(config_space,args.dist_type)

