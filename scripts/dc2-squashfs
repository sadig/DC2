#!/usr/bin/python
# -*- coding: utf-8 -*-
#################################################################################
#
#    (DC)Â² - DataCenter Deployment Control
#    Copyright (C) 2010, 2011, 2012  Stephan Adig <sh@sourcecode.de>
#    This program is free software; you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation; either version 2 of the License, or
#    (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License along
#    with this program; if not, write to the Free Software Foundation, Inc.,
#    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
#################################################################################


import sys
import os
import os.path
from argparse import ArgumentParser
import subprocess

UTILS = ['/usr/bin/mksquashfs']

def check(utilname=None):
    if utilname is not None or utilname != '':
        if os.path.exists(utilname):
            return True
    return False

def create_squashfs(args):
    params = '-wildcards -e usr/share/locale/* -e usr/share/doc/* -e var/lib/apt/* -e var/cache/apt/* -e usr/share/man/* -e var/lib/dpkg/info/* -e boot/*'
    nfsroot_path = args.nfsroot
    if nfsroot_path.find('/live/filesystem.dir') == -1:
        nfsroot_path = '{0}/live/filesystem.dir'.format(args.nfsroot)
    if not os.path.exists(nfsroot_path):
        return False
    call_params = ['/usr/bin/mksquashfs', nfsroot_path, args.livefs_filename]
    call_params.extend(params.split(' '))
    result = subprocess.call(call_params)
    if result != 0:
        return False
    return True

def do_process(args=None):
    if args is None:
        return (False, 'No Arguments')
    for i in UTILS:
        if not check(i):
            return (False, 'Util: {0} not found on your system'.format(i))
    if not create_squashfs(args):
        return (False, 'SquashFS was not created successfully')
    return (True, 'Ok')
if __name__ == '__main__':
    if os.geteuid() != 0:
        print('Only "root" can run this program')
        sys.exit(250)
    parser = ArgumentParser(prog='dc2-squashfs')
    parser.add_argument('-d', '--nfsroot-dir', default='/srv/fai/nfsroot',
                        metavar='PATH', action='store', dest='nfsroot',
                        help='Path to the FAI NFSROOT')
    parser.add_argument('-o', '--livefs-filename', default='defaultfs.img',
                        metavar='FILENAME', action='store',
                        dest='livefs_filename')
    args = parser.parse_args()
    result, error_msg = do_process(args)
    if not result:
        print(error_msg)
        sys.exit(1)
    print error_msg

